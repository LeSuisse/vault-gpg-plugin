name: CI

permissions: read-all

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  tests:
    strategy:
      matrix:
        os: ["windows-2022", "ubuntu-22.04", "macos-12"]
    runs-on: ${{ matrix.os }}
    name: Tests (${{ matrix.os }})
    steps:
      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9
      - uses: actions/setup-go@fac708d6674e30b6ba41289acaab6d4b75aa0753
        with:
          go-version: '^1.20.0'
      - name: Tests
        run: "go test -race -coverprofile='coverage.txt' -covermode=atomic -v ./gpg/"
      - uses: codecov/codecov-action@eaaf4bedf32dbdc6b720b63067d99c4d77d6047d
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
  static_analysis:
    runs-on: ubuntu-22.04
    name: Run static analysis and linting
    steps:
      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9
      - uses: actions/setup-go@fac708d6674e30b6ba41289acaab6d4b75aa0753
        with:
          go-version: '^1.20.0'
      - name: Go fmt
        run: diff -u <(echo -n) <(gofmt -d -s *.go gpg/)
      - name: Go vet
        run: env GO111MODULE=on go vet ./...
      - name: Staticcheck
        run: go run honnef.co/go/tools/cmd/staticcheck -checks 'all,-ST1000' ./...
      - name: Gosec
        run: go run github.com/securego/gosec/cmd/gosec -exclude=G104 ./...
  build_script:
    runs-on: ubuntu-22.04
    name: Build across all supported architectures
    steps:
      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9
      - uses: cachix/install-nix-action@4b933aa7ebcc94a6174cf1364864e957b4910265
      - name: Build
        run: ./scripts/build.sh
      - uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce
        with:
          name: pre-built-binaries
          path: pkg/*.zip
          retention-days: 2
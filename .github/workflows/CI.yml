name: CI

permissions: read-all

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  tests:
    strategy:
      matrix:
        os: ["windows-2019", "ubuntu-20.04", "macos-10.15"]
    runs-on: ${{ matrix.os }}
    name: Tests (${{ matrix.os }})
    steps:
      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579
      - uses: actions/setup-go@424fc82d43fa5a37540bae62709ddcc23d9520d4
        with:
          go-version: '^1.17.0'
      - name: Tests
        run: "go test -race -coverprofile='coverage.txt' -covermode=atomic -v ./gpg/"
      - uses: codecov/codecov-action@f32b3a3741e1053eb607407145bc9619351dc93b
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
  static_analysis:
    runs-on: ubuntu-20.04
    name: Run static analysis and linting
    steps:
      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579
      - uses: actions/setup-go@424fc82d43fa5a37540bae62709ddcc23d9520d4
        with:
          go-version: '^1.17.0'
      - name: Go fmt
        run: diff -u <(echo -n) <(gofmt -d -s *.go gpg/)
      - name: Go vet
        run: env GO111MODULE=on go vet ./...
      - name: Staticcheck
        run: go run honnef.co/go/tools/cmd/staticcheck -checks 'all,-ST1000' ./...
      - name: Gosec
        run: go run github.com/securego/gosec/cmd/gosec -exclude=G104 ./...
  build_script:
    runs-on: ubuntu-20.04
    name: Build across all supported architectures
    steps:
      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579
      - uses: cachix/install-nix-action@d56f3ce9be45c562799280e8a561fbbe8f36de44
      - name: Build
        run: ./scripts/build.sh
      - uses: actions/upload-artifact@82c141cc518b40d92cc801eee768e7aafc9c2fa2
        with:
          name: pre-built-binaries
          path: pkg/*.zip
          retention-days: 2
name: CI

permissions: read-all

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  tests:
    strategy:
      matrix:
        os: ["windows-2022", "ubuntu-22.04", "macos-12"]
    runs-on: ${{ matrix.os }}
    name: Tests (${{ matrix.os }})
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      - uses: actions/setup-go@41dfa10bad2bb2ae585af6ee5bb4d7d973ad74ed
        with:
          go-version: '^1.21.0'
      - name: Tests
        run: "go test -race -coverprofile='coverage.txt' -covermode=atomic -v ./gpg/"
      - uses: codecov/codecov-action@5c47607acb93fed5485fdbf7232e8a31425f672a
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
  static_analysis:
    runs-on: ubuntu-22.04
    name: Run static analysis and linting
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      - uses: cachix/install-nix-action@3715ab1a11cac9e991980d7b4a28d80c7ebdd8f9
      - run: nix-shell --run 'golangci-lint run --timeout=5m'
  test_release:
    runs-on: ubuntu-22.04
    permissions:
      id-token: write
      contents: read
    name: Test release
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      - uses: cachix/install-nix-action@3715ab1a11cac9e991980d7b4a28d80c7ebdd8f9
      - run: nix-shell --run 'goreleaser --snapshot --clean'
      - uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882
        with:
          name: test-release-dist
          path: dist/**/*
          retention-days: 2
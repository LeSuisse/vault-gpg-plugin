name: CI

permissions: read-all

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  tests:
    strategy:
      matrix:
        os: ["windows-2022", "ubuntu-22.04", "macos-12"]
    runs-on: ${{ matrix.os }}
    name: Tests (${{ matrix.os }})
    steps:
      - uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f
      - uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491
        with:
          go-version: '^1.21.0'
      - name: Tests
        run: "go test -race -coverprofile='coverage.txt' -covermode=atomic -v ./gpg/"
      - uses: codecov/codecov-action@84508663e988701840491b86de86b666e8a86bed
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
  static_analysis:
    runs-on: ubuntu-22.04
    name: Run static analysis and linting
    steps:
      - uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f
      - uses: cachix/install-nix-action@8887e596b4ee1134dae06b98d573bd674693f47c
      - run: nix-shell --run 'golangci-lint run --timeout=5m'
  test_release:
    runs-on: ubuntu-22.04
    permissions:
      id-token: write
      contents: read
    name: Test release
    steps:
      - uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f
      - uses: cachix/install-nix-action@8887e596b4ee1134dae06b98d573bd674693f47c
      - run: nix-shell --run 'goreleaser --snapshot --clean'
      - uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808
        with:
          name: test-release-dist
          path: dist/**/*
          retention-days: 2